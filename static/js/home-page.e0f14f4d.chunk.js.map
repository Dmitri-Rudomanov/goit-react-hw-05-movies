{"version":3,"file":"static/js/home-page.e0f14f4d.chunk.js","mappings":"oIAAA,IAAMA,EAAU,mCACVC,EAAW,gCA8CjB,IAAMC,EAAM,CACVC,mBA7CF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CD,IAAWK,MACjE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WA0CtBC,aArCF,SAAsBC,GACpB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,oBAAmCV,IAAWK,MAAK,SAAAC,GAC7D,GAAIA,EAASC,GACX,OAAOD,EAASE,WAmCpBG,UA/BF,SAAmBD,GACjB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAA2CV,IAAWK,MAChE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WA4BtBI,aAvBF,SAAsBF,GACpB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAA2CV,IAAWK,MAChE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WAoBtBK,YAfF,SAAqBC,GACnB,OAAOV,MAAM,GAAD,OACPH,EADO,gCACyBD,EADzB,kBAC0Cc,EAD1C,YAEVT,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,YAatB,O,2HClDe,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,qBAA+BjB,MAAK,YAAkB,IAAfkB,EAAc,EAAdA,QACrCH,EAAYG,MAEVC,aAAaC,QAAQ,mBACvBD,aAAaE,QAAQ,iBAAkB,MAExC,KAGD,8BACGP,IACC,wBACGA,EAASQ,KAAI,SAAAC,GAAK,OACjB,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAMlB,IACrBoB,MAAO,CAAEC,KAAM,CAAEf,SAAAA,EAAUgB,MAAO,cAFpC,SAIGJ,EAAMK,eAAiBL,EAAMK,eAAiBL,EAAMM,QALhDN,EAAMlB","sources":["services/moviesApi.js","views/HomePage/HomePage.js"],"sourcesContent":["const API_KEY = '9f7c5da3425a9d17909027ad2b61278f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nfunction fetchPopularMovies() {\n  return fetch(`${BASE_URL}trending/movies/week?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\nfunction fetchCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchMovies(movie) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${movie}&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nconst api = {\n  fetchPopularMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n  fetchMovies,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport moviesApi from '../../services/moviesApi.js';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const [trending, setTrending] = useState(null);\n  useEffect(() => {\n    moviesApi.fetchPopularMovies().then(({ results }) => {\n      setTrending(results);\n    });\n    if (localStorage.getItem('SearchedMovies')) {\n      localStorage.setItem('SearchedMovies', []);\n    }\n  }, []);\n\n  return (\n    <>\n      {trending && (\n        <ul>\n          {trending.map(trend => (\n            <li key={trend.id}>\n              <Link\n                to={`/movies/${trend.id}`}\n                state={{ from: { location, label: 'Home-Page' } }}\n              >\n                {trend.original_title ? trend.original_title : trend.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","api","fetchPopularMovies","fetch","then","response","ok","json","fetchDetails","id","fetchCast","fetchReviews","fetchMovies","movie","HomePage","location","useLocation","useState","trending","setTrending","useEffect","moviesApi","results","localStorage","getItem","setItem","map","trend","to","state","from","label","original_title","name"],"sourceRoot":""}