{"version":3,"file":"static/js/movie-details-page.024d2e8c.chunk.js","mappings":"oIAAA,IAAMA,EAAU,mCACVC,EAAW,gCA8CjB,IAAMC,EAAM,CACVC,mBA7CF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CD,IAAWK,MACjE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WA0CtBC,aArCF,SAAsBC,GACpB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,oBAAmCV,IAAWK,MAAK,SAAAC,GAC7D,GAAIA,EAASC,GACX,OAAOD,EAASE,WAmCpBG,UA/BF,SAAmBD,GACjB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAA2CV,IAAWK,MAChE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WA4BtBI,aAvBF,SAAsBF,GACpB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAA2CV,IAAWK,MAChE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WAoBtBK,YAfF,SAAqBC,GACnB,OAAOV,MAAM,GAAD,OACPH,EADO,gCACyBD,EADzB,kBAC0Cc,EAD1C,YAEVT,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,YAatB,O,oIClDe,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,YAA1B,eAAOJ,EAAP,KAAcS,EAAd,MACAC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACbK,EAAAA,EAAAA,aAAuBJ,GAAShB,MAAK,SAAAqB,GACnCH,EAASG,GACTN,GAAa,QAEd,CAACC,IAEJ,IAAMM,GAAcb,IAAUK,EAE9B,OACE,gCACGA,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,CAAMS,GAAIZ,EAASa,MAAQb,EAASa,MAAMC,KAAKd,SAAW,IAA1D,SACGA,EAASa,MAAT,kBAA4Bb,EAASa,MAAMC,KAAKC,OAAU,UAE7D,kBACCjB,IACC,4BACE,4BACE,0BACE,gBACEkB,IAAG,0CACDlB,EAAMmB,YAAcnB,EAAMmB,YAAcnB,EAAMoB,eAEhDC,IAAKrB,EAAMsB,MAAQtB,EAAMsB,MAAQtB,EAAMuB,KACvCC,MAAM,WAGV,4BACE,wBAAKxB,EAAMsB,MAAQtB,EAAMyB,eAAiBzB,EAAMuB,QAChD,wCAAgBvB,EAAM0B,iBACtB,sCACA,uBAAI1B,EAAM2B,YACV,oCACA,wBACG3B,EAAM4B,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMP,MAAjBO,EAAMlC,gBAKvB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CACEkB,GAAI,CACFiB,SAAS,WAAD,OAAa/B,EAAMJ,GAAnB,SACRmB,MAAO,CACLC,KAAM,CACJd,SAAAA,KALR,qBAaF,yBACE,SAAC,KAAD,CACEY,GAAI,CACFiB,SAAS,WAAD,OAAa/B,EAAMJ,GAAnB,YACRmB,MAAO,CACLC,KAAM,CACJd,SAAAA,KALR,8BAeN,qBAGHW,IAAc","sources":["services/moviesApi.js","views/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["const API_KEY = '9f7c5da3425a9d17909027ad2b61278f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nfunction fetchPopularMovies() {\n  return fetch(`${BASE_URL}trending/movies/week?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\nfunction fetchCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchMovies(movie) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${movie}&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nconst api = {\n  fetchPopularMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n  fetchMovies,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { NavLink, Link, useParams, useLocation } from 'react-router-dom';\nimport moviesApi from '../../services/moviesApi.js';\nimport Loader from 'components/Loader/Loader.js';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(null);\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n    moviesApi.fetchDetails(movieId).then(result => {\n      setMovie(result);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  const movieCheck = !movie && !isLoading;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Link to={location.state ? location.state.from.location : '/'}>\n        {location.state ? `Back to ${location.state.from.label}` : 'Back'}\n      </Link>\n      <hr />\n      {movie && (\n        <div>\n          <div>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${\n                  movie.poster_path ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.title ? movie.title : movie.name}\n                width=\"250\"\n              />\n            </div>\n            <div>\n              <h2>{movie.title ? movie.original_title : movie.name}</h2>\n              <p>User score: {movie.vote_average}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <NavLink\n                  to={{\n                    pathname: `/movies/${movie.id}/cast`,\n                    state: {\n                      from: {\n                        location,\n                      },\n                    },\n                  }}\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={{\n                    pathname: `/movies/${movie.id}/reviews`,\n                    state: {\n                      from: {\n                        location,\n                      },\n                    },\n                  }}\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <hr />\n        </div>\n      )}\n      {movieCheck && <h2>Sorry,something went wrong with this movie page</h2>}\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","api","fetchPopularMovies","fetch","then","response","ok","json","fetchDetails","id","fetchCast","fetchReviews","fetchMovies","movie","MovieDetails","location","useLocation","useState","isLoading","setIsLoading","movieId","useParams","setMovie","useEffect","moviesApi","result","movieCheck","to","state","from","label","src","poster_path","backdrop_path","alt","title","name","width","original_title","vote_average","overview","genres","map","genre","pathname"],"sourceRoot":""}