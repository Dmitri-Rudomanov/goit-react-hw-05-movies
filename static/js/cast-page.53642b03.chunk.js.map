{"version":3,"file":"static/js/cast-page.53642b03.chunk.js","mappings":"mIAAA,IAAMA,EAAU,mCACVC,EAAW,gCA8CjB,IAAMC,EAAM,CACVC,mBA7CF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CD,IAAWK,MACjE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WA0CtBC,aArCF,SAAsBC,GACpB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,oBAAmCV,IAAWK,MAAK,SAAAC,GAC7D,GAAIA,EAASC,GACX,OAAOD,EAASE,WAmCpBG,UA/BF,SAAmBD,GACjB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAA2CV,IAAWK,MAChE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WA4BtBI,aAvBF,SAAsBF,GACpB,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAA2CV,IAAWK,MAChE,SAAAC,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,WAoBtBK,YAfF,SAAqBC,GACnB,OAAOV,MAAM,GAAD,OACPH,EADO,gCACyBD,EADzB,kBAC0Cc,EAD1C,YAEVT,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,YAatB,O,0HCjDe,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MACAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,UAAoBN,GAASX,MAAK,gBAAGc,EAAH,EAAGA,KAAH,OAAcC,EAAQD,QACvD,CAACH,IAEJ,IAAMO,EAAYJ,GAAwB,IAAhBA,EAAKK,OAC/B,OACE,gCACGL,IACC,wBACGA,EAAKM,KAAI,SAAAC,GAAK,OACb,yBACE,4BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cACzCC,EAENC,IAAKJ,EAAMK,iBAEb,4BACE,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,oBAZlBP,EAAMhB,SAmBpBa,IACC,uF","sources":["services/moviesApi.js","views/Cast/Cast.js"],"sourcesContent":["const API_KEY = '9f7c5da3425a9d17909027ad2b61278f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nfunction fetchPopularMovies() {\n  return fetch(`${BASE_URL}trending/movies/week?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchDetails(id) {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\nfunction fetchCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n}\nfunction fetchMovies(movie) {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${movie}&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nconst api = {\n  fetchPopularMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n  fetchMovies,\n};\n\nexport default api;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport noAvatar from '../../icons/no_avatar.jpg';\n\nimport moviesApi from '../../services/moviesApi.js';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    moviesApi.fetchCast(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  const castCheck = cast && cast.length === 0;\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <div>\n                <img\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                      : noAvatar\n                  }\n                  alt={actor.original_name}\n                />\n                <div>\n                  <p>{actor.name}</p>\n                  <p>Character: {actor.character}</p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {castCheck && (\n        <h2>Sorry,we havent found any cast members for this movie</h2>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","api","fetchPopularMovies","fetch","then","response","ok","json","fetchDetails","id","fetchCast","fetchReviews","fetchMovies","movie","Cast","movieId","useParams","useState","cast","setCast","useEffect","moviesApi","castCheck","length","map","actor","src","profile_path","noAvatar","alt","original_name","name","character"],"sourceRoot":""}